% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean.R
\name{clean}
\alias{clean}
\title{Perform a check of potential errors in a data frame}
\usage{
clean(o, file = NULL, removeExisting = TRUE, maxnum = NULL,
  standAlone = TRUE, brag = FALSE, ordering = c("asIs", "alpha"),
  cleanUp = "deletethisoption?", quiet = TRUE, output = "pdf",
  finish = "markdown", twoCol = TRUE, silent = FALSE, openResult = TRUE,
  mode = c("summarize", "visualize", "check"), useVar = "all",
  nagUser = TRUE, smartNum = TRUE, preChecks = c("isSpecial", "isCPR"),
  replace = "never", listChecks = TRUE, checkDetails = FALSE, vol = "",
  ...)
}
\arguments{
\item{o}{the data frame or tibble(???) object to be checked}

\item{standAlone}{If TRUE, the document begins with a markdown preamble such that it
can be rendered as is.}

\item{brag}{If TRUE, a note about cleanR is appended at the end of the output document.}

\item{ordering}{Choose the ordering of the variables in the data presentation. The options
are "asIs" (ordering as in the dataset) and "alpha" (alphabetical order).}

\item{cleanUp}{- not done yet -.}

\item{output}{Output format, options are pdf and html}

\item{finish}{"render" (makes pdf/html), "markdown" (makes markdown file), "print" (prints to screen).}

\item{twoCol}{Should the results be presented in two columns (if finish is "render" or "markdown")?}

\item{silent}{Should clean() run completely silently? Note that this option overrules the settings for
"quiet": A silent session is always quiet.}

\item{openResult}{If TRUE, the file produced by clean() is automatically opened by the end of
the function run.}

\item{mode}{Vector of tasks to perform among the three categories "summarize", "visualize" and "check".
Note that... SOMETHING ABOUT HOW THE FUNCTIONS CALLED IN EACH PART ARE CONTROLLED.}

\item{useVar}{Variables to clean and present results for. Either a list of variable names (as used in
the data.frame o) or one of two special options; "all" (every variable is cleaned and presented) or
"problematic" (only variables yielding problems from the checking function are presented)}

\item{nagUser}{Remove at some point}

\item{smartNum}{If TRUE, numeric and integer variables with less than maxLevels (defaults to 5) unique
values are treated as factor variables in the checking, visualization and summary functions. A
message is printed in the data summary as well.}

\item{preChecks}{Variable checks that are performed before the summary/visualization/checking step. If
any of these checks find problems, the variable will not be summarized nor visualized nor checked.}

\item{replace}{If "never", an error is thrown if one of the files that we are about to write to 
already exist. If "onlyCleanR", an error is thrown if one of the files that we are about to write to was 
not produced by cleanR (NOT DONE). If "always", no checks are performed.}

\item{listChecks}{If TRUE, the document contains an overview of what checks were performed for 
each variable data type.}

\item{checkDetails}{MAYBE ALSO IMPLEMENT THIS?: If TRUE, details about each check function are added 
to the document (if available)}

\item{vol}{Extra text string that is appended on the end of the output file name(s). For example, if the data
set is called "myData", no file argument is supplied and vol="2", the output file will be called
"cleanR_myData2.Rmd"}

\item{characterChecks}{a list of error-checking functions to apply to character vectors}

\item{integerChecks}{a list of error-checking functions to apply to integer vectors}

\item{\dots}{other arguments that are passed on the to checking, summary and visualization functions}
}
\value{
???
\itemize{
  \item{"name"}{The name of the check}
  \item{"description"}{Slightly more information about the check}
  \item{"problem"}{An integer giving an error code. 0 means no potential errors were identified}
  \item{"message"}{A string giving summary information in R markdown format about the results}
}
}
\description{
Runs a set of validation checks to check the variables in a data frame for potential errors.
Performs checking steps according to user input and/or data type of the inputted variable.
}
\examples{

clean(data.frame(x=1:15))

\dontrun{
data(testData)
clean(testData)
}

\dontrun{
characterFoo <- function(v) {
 if (substr(substitute(a), 1, 1) == "_") {
   out <- list(problem=TRUE, message="Note that the variable name begins with \\\\_")
 } else out <- list(problem=FALSE, message="")
 out
}
class(characterFoo) <- "checkFunction"
attr(characterFoo, "description") <- "I really hate underscores"
clean(testData, characterChecks="characterFoo")
}

}
\author{
Anne H. Petersen \email{ahpe@sund.ku.dk} and Claus Thorn Ekstrom \email{ekstrom@sund.ku.dk}
}
\seealso{
\code{\link{clean}}
}
\keyword{misc}

