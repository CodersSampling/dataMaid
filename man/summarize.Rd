% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarize.R
\name{summarize}
\alias{summarize}
\title{Make summary matrix}
\usage{
summarize(v, descriptive = FALSE, ...)
}
\arguments{
\item{v}{The variable (vector) which is to be summarized.}

\item{descriptive}{If TRUE, descriptive functions are added to the summary matrix
(see details).}

\item{...}{Additional argument passed to data class specific methods. First and foremost,
this is where to supply the summary functions and description functions (see details).}
}
\value{
A matrix with two columns, \code{feature} and \code{result} and one row for each
summary/description function that was called.
}
\description{
Generic shell function that produces a summary matrix for a variable \code{v},
given a number of summary functions and depending on its data class.
}
\details{
Summary functions are supplied using their
names (in character strings) in the class-specific argument, e.g.
\code{characterSummaries = c("countMissing", "uniqueValues")} for character variables and
similarly for the remaining 5 data classes (factor, labelled, numeric, integer, logical).
Secondly, additional functions can be added using the "descriptions"-arguments, e.g.
\code{characterDescriptions = "centralValue"}. If \code{descriptive = T} the results of
these functions are added to the outputted summary matrix. Note that this is nothing
more than a convenient way to add an extra category of summary functions to the output.
Summary functions and description functions are treated in the exact same way.

The default summary- and character functions are available in data class specific functions, e.g.
\code{defaultCharacterSummaries()} and \code{defaultCharacterDescriptions()}, respectively.

A user defined summary (or description) function can be supplied using its function name. Note
however that it should take a vector as argument and return a list on the form
\code{list(feature="Feature name", result="The result")}. See e.g. \code{\link{variableType}} for
an example of a summary function.
}
\examples{
#Default summary for a character vector: 
   charV <- c("a", "b", "c", "a", "a", NA, "b", "0")
   summarize(charV)
 
#Add default description functions:
   summarize(charV, descriptive = TRUE)

#Inspect default character summary functions:
   defaultCharacterSummaries()
   
#Define a new summary function and add it to the summary for character vectors:
   countZeros <- function(v) {
     res <- length(which(v == 0))
     list(feature="No. zeros", result = res)
   }
   summarize(charV, characterSummaries = c(defaultCharacterSummaries(), "countZeros"))

 #Does nothing, as intV is not affected by characterSummaries
   intV <- c(0:10)
   summarize(intV, characterSummaries = c(defaultCharacterSummaries(), "countZeros"))

 #But supplying the argument for integer variables changes the summary:
   summarize(intV, integerSummaries = "countZeros")

}
\seealso{
\code{\link{defaultCharacterSummaries}}, \code{\link{defaultFactorSummaries}},
\code{\link{defaultLabelledSummaries}}, \code{\link{defaultLabelledSummaries}},
\code{\link{defaultNumericSummaries}}, \code{\link{defaultIntegerSummaries}},
\code{\link{defaultLogicalSummaries}},
\code{\link{defaultCharacterDescriptions}}, \code{\link{defaultFactorDescriptions}},
\code{\link{defaultLabelledDescriptions}}, \code{\link{defaultLabelledDescriptions}},
\code{\link{defaultNumericDescriptions}}, \code{\link{defaultIntegerDescriptions}},
\code{\link{defaultLogicalDescriptions}},
}

